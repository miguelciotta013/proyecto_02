{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kalel\\\\Desktop\\\\cero\\\\proyecto_02\\\\frontend\\\\src\\\\pages\\\\cajas\\\\listaCajas.jsx\",\n  _s = $RefreshSig$();\n/*\nLista de las cajas con los montos, fechas y hora para cada movimiento(apertura y cierre)\n\n- boton para abrir caja (en caso de que no haya una caja abierta)\n- boton para cerrar caja (en caso de que haya una caja abierta)\n- ambos botones no deben estar dispomibles al mismo tiempo\n*/\nimport React, { useEffect, useState } from 'react';\nimport { listCajas, aperturaCaja } from '../../api/cajasApi';\nimport CajaTable from '../../components/cajas/cajaTable';\nimport AperturaForm from '../../components/cajas/AperturaForm';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListaCajas() {\n  _s();\n  const [cajas, setCajas] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  async function fetchCajas() {\n    setLoading(true);\n    try {\n      const resp = await listCajas();\n      if (resp && resp.success) {\n        setCajas(resp.data || []);\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchCajas();\n  }, []);\n  async function handleApertura(payload) {\n    try {\n      const resp = await aperturaCaja(payload);\n      if (resp && resp.success) {\n        // navegar al detalle de la nueva caja\n        navigate(`/cajas/${resp.data.id_caja}`);\n      } else {\n        const msg = resp && (resp.error || resp.message) ? resp.error || resp.message : 'Error al abrir caja';\n        alert(msg);\n      }\n    } catch (e) {\n      console.error(e);\n      alert(e.message || 'Error al abrir caja');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cajas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(AperturaForm, {\n        onSubmit: handleApertura\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(CajaTable, {\n      items: cajas,\n      onView: id => navigate(`/cajas/${id}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_s(ListaCajas, \"PZ68Tslj0s/Dy+DjeboOgkiIzl4=\", false, function () {\n  return [useNavigate];\n});\n_c = ListaCajas;\nvar _c;\n$RefreshReg$(_c, \"ListaCajas\");","map":{"version":3,"names":["React","useEffect","useState","listCajas","aperturaCaja","CajaTable","AperturaForm","useNavigate","jsxDEV","_jsxDEV","ListaCajas","_s","cajas","setCajas","loading","setLoading","navigate","fetchCajas","resp","success","data","e","console","error","handleApertura","payload","id_caja","msg","message","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onSubmit","items","onView","id","_c","$RefreshReg$"],"sources":["C:/Users/Kalel/Desktop/cero/proyecto_02/frontend/src/pages/cajas/listaCajas.jsx"],"sourcesContent":["/*\nLista de las cajas con los montos, fechas y hora para cada movimiento(apertura y cierre)\n\n- boton para abrir caja (en caso de que no haya una caja abierta)\n- boton para cerrar caja (en caso de que haya una caja abierta)\n- ambos botones no deben estar dispomibles al mismo tiempo\n*/\nimport React, { useEffect, useState } from 'react';\nimport { listCajas, aperturaCaja } from '../../api/cajasApi';\nimport CajaTable from '../../components/cajas/cajaTable';\nimport AperturaForm from '../../components/cajas/AperturaForm';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function ListaCajas() {\n\tconst [cajas, setCajas] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst navigate = useNavigate();\n\n\tasync function fetchCajas() {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst resp = await listCajas();\n\t\t\tif (resp && resp.success) {\n\t\t\t\tsetCajas(resp.data || []);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t} finally {\n\t\t\tsetLoading(false);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchCajas();\n\t}, []);\n\n\tasync function handleApertura(payload) {\n\t\ttry {\n\t\t\tconst resp = await aperturaCaja(payload);\n\t\t\t\tif (resp && resp.success) {\n\t\t\t\t\t// navegar al detalle de la nueva caja\n\t\t\t\t\tnavigate(`/cajas/${resp.data.id_caja}`);\n\t\t\t\t} else {\n\t\t\t\t\tconst msg = resp && (resp.error || resp.message) ? (resp.error || resp.message) : 'Error al abrir caja';\n\t\t\t\t\talert(msg);\n\t\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t\t\talert(e.message || 'Error al abrir caja');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Cajas</h2>\n\t\t\t<div style={{ marginBottom: 12 }}>\n\t\t\t\t<AperturaForm onSubmit={handleApertura} />\n\t\t\t</div>\n\n\t\t\t{loading ? <div>Cargando...</div> : <CajaTable items={cajas} onView={(id) => navigate(`/cajas/${id}`)} />}\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}